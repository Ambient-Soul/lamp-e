nodes:
  - id: lcr_leader
    path: ../../../node_hub/dynamixel_client/client.py
    inputs:
      pull_position: dora/timer/millis/10 # pull the position every 10ms
    outputs:
      - position
    env:
      PORT: /dev/tty.usbmodem575E0030111

      IDS: 1 2 3 4 5 6
      JOINTS: shoulder_pan shoulder_lift elbow_flex wrist_flex wrist_roll gripper
      MODELS: x_series x_series x_series x_series x_series x_series

      TORQUE: False False False False False True

      INITIAL_GOAL_POSITION: None None None None None -450
      INITIAL_GOAL_CURRENT: None None None None None 40

      OFFSETS: -2048 -3072 1024 -2048 1024 2048
      DRIVE_MODES: POS POS NEG POS NEG NEG

  - id: lcr_interpolate
    path: ../nodes/interpolate_lcr_to_lcr.py
    inputs:
      leader_position: lcr_leader/position
      follower_position: lcr_follower/position
    outputs:
      - goal_position

  - id: lcr_follower
    path: ../../../node_hub/dynamixel_client/client.py
    inputs:
      pull_position: dora/timer/millis/10
      write_goal_position: lcr_interpolate/goal_position

    outputs:
      - position
    env:
      PORT: /dev/tty.usbmodem575E0031141

      IDS: 1 2 3 4 5 6
      JOINTS: shoulder_pan shoulder_lift elbow_flex wrist_flex wrist_roll gripper
      MODELS: x_series x_series x_series x_series x_series x_series

      TORQUE: True True True True True True

      INITIAL_GOAL_POSITION: None None None None None None
      INITIAL_GOAL_CURRENT: None None None None None 500

      OFFSETS: -2048 2048 2048 2048 1024 2048
      DRIVE_MODES: POS NEG NEG NEG NEG NEG

  - id: opencv_camera
    path: ../../../node_hub/opencv_camera/camera.py
    inputs:
      pull_image: dora/timer/millis/16 # pull the image every 10ms
    outputs:
      - image # push the image to the dataflow

    env:
      CAMERA_ID: 0 # camera id to use, change this to the camera id you want to use (e.g 0, 1, /dev/video0, /dev/video1)
      CAMERA_WIDTH: 640 # camera width
      CAMERA_HEIGHT: 480 # camera height

  - id: pygame_interface
    path: ../../../node_hub/pygame_interface/interface.py # modify this to the relative path from the graph file to the client script
    inputs:
      write_image_left: opencv_camera/image # write the image to the left side of the interface
      write_text: record_orchestrator/text
    outputs:
      - key_pressed
      - key_released

    env:
      CAMERA_WIDTH: 640 # camera width
      CAMERA_HEIGHT: 480 # camera height

  - id: record_orchestrator
    path: ../../../node_hub/record_orchestrator/record.py
    inputs:
      key_pressed: pygame_interface/key_pressed
    outputs:
      - text
      - episode
      - failed

  - id: dora_record
    path: dora-record
    inputs:
      action: lcr_interpolate/goal_position
      observation.state: lcr_follower/position
      episode_index: record_orchestrator/episode
      failed_episode_index: record_orchestrator/failed
      observation.images.cam_up: opencv_camera/image